(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{517:function(t,s,a){"use strict";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[t._v("泛型主要是帮助复杂数据类型去规范子元素的数据类型，提高代码的严谨，也可以通过泛型减少重复代码的书写")])]),t._v(" "),a("h4",{attrs:{id:"list泛型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list泛型"}},[t._v("#")]),t._v(" "),a("strong",[t._v("List泛型")])]),t._v(" "),a("blockquote",[a("p",[t._v("语法格式：")]),t._v(" "),a("ol",[a("li",[t._v("格式一："),a("code",[t._v("List<子元素数据类型> 变量名 = [子元素]")])]),t._v(" "),a("li",[t._v("格式二："),a("code",[t._v("List 变量名 = <子元素数据类型>[子元素]")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置子元素都必须是String类型")]),t._v("\nList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nList list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"map泛型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map泛型"}},[t._v("#")]),t._v(" "),a("strong",[t._v("map泛型")])]),t._v(" "),a("blockquote",[a("p",[t._v("语法格式：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Map<键数据类型, 值数据类型> map = {键: 值}")])]),t._v(" "),a("li",[a("code",[t._v("Map map = <键数据类型, 值数据类型>{键: 值}")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("ol",[a("li",[t._v("键的数据类型一般都是"),a("code",[t._v("String")])]),t._v(" "),a("li",[a("code",[t._v("dynamic")]),t._v("是动态数据类型，如果你严格限制"),a("code",[t._v("值的数据类型")]),t._v("，可以写成这种方式"),a("code",[t._v('Map<String, String> map = {"name": "张三"}')])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("Map"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nMap map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"方法泛型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法泛型"}},[t._v("#")]),t._v(" "),a("strong",[t._v("方法泛型")])]),t._v(" "),a("blockquote",[a("p",[t._v("针对方法的参数，返回值等使用泛型可以帮助我们提高代码的复用性和安全性")]),t._v(" "),a("p",[a("code",[t._v("T")]),t._v("是"),a("code",[t._v("Type")]),t._v("的缩写，这个可以自己随便定义，这里的"),a("code",[t._v("T")]),t._v("代表的就是动态的数据类型，你传入什么参数，他就是什么类型并且严格限制的")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("T getAreaFirst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  T tmp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);